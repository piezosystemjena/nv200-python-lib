image: python:3.12

stages:
  - build
  - pages
  - publish

variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
  POETRY_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pypoetry"
  POETRY_VIRTUALENVS_CREATE: "false"
  POETRY_HOME: "$CI_PROJECT_DIR/.poetry"
  TEST_PYPI_URL: "https://test.pypi.org/legacy/"
  PYPI_URL: "https://upload.pypi.org/legacy/"

cache:
  paths:
    - .cache/pip
    - .cache/pypoetry

.default_setup: &default_setup
  before_script:
    - python --version
    - pip install --upgrade pip
    - pip install poetry
    # Optional: poetry lock --no-update
    - poetry install --no-root
    # Install dynamic versioning plugin
    - pip install "poetry-dynamic-versioning[plugin]"
    - poetry self add "poetry-dynamic-versioning[plugin]"


# ------------------
# Build Python wheel
# ------------------
build_wheel:
  stage: build
  <<: *default_setup
  script:
    - poetry build
  artifacts:
    paths:
      - dist/*.whl
      - dist/*.tar.gz
    expire_in: 1 week

# -----------------------------
# Build and Deploy Sphinx Docs
# -----------------------------
pages:
  stage: pages
  <<: *default_setup
  script:
    - poetry run sphinx-build -b html doc/ public
  artifacts:
    paths:
      - public
    expire_in: 1 week
  only:
    - main


# -----------------------------------
# Publish to Test PyPI on each commit
# -----------------------------------
publish_testpypi:
  stage: publish
  <<: *default_setup
  dependencies:
    - build_wheel
  script:
    - poetry config repositories.test-pypi $TEST_PYPI_URL
    - poetry config pypi-token.test-pypi $TEST_PYPI_TOKEN
    - poetry publish -r test-pypi
  only:
    - main


# -----------------------------------
# Publish to PyPI on each new tag
# -----------------------------------
publish_pypi:
  stage: publish
  <<: *default_setup
  dependencies:
    - build_wheel
  script:
    - poetry config repositories.pypi $PYPI_URL
    - poetry config pypi-token.pypi $PYPI_TOKEN
    - poetry publish -r pypi
  only:
    - main

